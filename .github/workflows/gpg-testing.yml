name: Comprehensive GPG Testing

on:
  workflow_dispatch:  # Manual trigger for testing
  push:
    paths:
      - 'pom.xml'
      - '.github/workflows/**'

jobs:
  test-gpg-setup:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Import and test GPG
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Verify GPG setup
        run: |
          gpg --list-secret-keys --keyid-format LONG
          gpg --list-keys

      - name: Test Maven GPG plugin
        run: |
          # Clean build
          mvn clean
          
          # Build with GPG signing
          mvn --batch-mode package gpg:sign \
            -Dgpg.passphrase="${{ secrets.GPG_PASSPHRASE }}" \
            -DskipTests

      - name: Verify signatures
        run: |
          echo "=== Checking for signature files ==="
          find target -name "*.asc" -type f | while read file; do
            echo "Found signature: $file"
            original_file="${file%.asc}"
            if [ -f "$original_file" ]; then
              echo "Verifying $original_file with $file"
              gpg --verify "$file" "$original_file"
              if [ $? -eq 0 ]; then
                echo "✓ Signature verification successful for $original_file"
              else
                echo "✗ Signature verification failed for $original_file"
                exit 1
              fi
            fi
          done

      - name: Test deployment simulation
        run: |
          # Test what would happen during deployment
          mvn --batch-mode deploy -DskipTests -DaltDeploymentRepository=local::file:./target/staging \
            -Dgpg.passphrase="${{ secrets.GPG_PASSPHRASE }}"

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: signed-artifacts
          path: |
            target/*.jar
            target/*.asc
            target/staging/**
